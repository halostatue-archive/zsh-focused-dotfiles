#!/bin/zsh

autoload -- --rationalise-dot url-quote-magic
zle -N self-insert url-quote-magic
zle -N -- --rationalise-dot

# Z line editor, zsh’s version of readline has a very good Emacs keybinding
# support which we’ll enable and configure it to regard / as a word separator
# too (highly useful for editing paths):
WORDCHARS=${WORDCHARS//[&=\/;!#%\{\}]}
bindkey -e

[ -n "${key[Home]}" ] && bindkey "${key[Home]}" beginning-of-line
[ -n "${key[End]}" ] && bindkey "${key[End]}" end-of-line

bindkey "^[[3~" delete-char
bindkey "^[[5~" backward-word
bindkey "^[[6~" forward-word
bindkey "^[^[[D" backward-word 
bindkey "^[^[[C" forward-word

bindkey "^[[A" history-beginning-search-backward
bindkey "^[[B" history-beginning-search-forward

bindkey "^A" beginning-of-line
bindkey "^E" end-of-line
bindkey "^K" kill-line
bindkey "^L" clear-screen
bindkey "^R" history-incremental-search-backward
bindkey "^U" kill-whole-line
bindkey "^V" quoted-insert
bindkey "^W" backward-kill-word

bindkey "^N" down-history
bindkey "^P" up-history

bindkey "^[H" run-help
bindkey "^[h" run-help

bindkey "^[m" copy-prev-shell-word

bindkey '^[^[[D' backward-word
bindkey '^[^[[C' forward-word
bindkey '^[[5D' beginning-of-line
bindkey '^[[5C' end-of-line
# bindkey '^[^N' newtab
bindkey '^?' backward-delete-char 

bindkey " " magic-space

bindkey "^Og" noglob-command-line
bindkey "^Os" sudo-command-line

bindkey . --rationalise-dot

bindkey -s $'\u00a0' '^u'
