#! zsh

is-interactive || return 0

function()
{
  local param
  zstyle -s :hzsh:plugins:zsh-bookmarks cache-path param

  if --hzsh-is-caching; then
    export __hzsh_zsh_bookmarks_cache=${param:-$(--hzsh-cache-path)/zbookmarks}
  else
    export __hzsh_zsh_bookmarks_cache=${param:-${HOME}/.zbookmarks}
  fi

  command mkdir -p ${__hzsh_zsh_bookmarks_cache}

  for param (${__hzsh_zsh_bookmarks_cache}/*(N@)) {
    hash -d -- -${link:t}=${link:A}
  }

  function --hzsh-insert-bookmark()
  {
    emulate -L zsh
    LBUFFER=${LBUFFER}"~-"
  }
  zle -N -- --hzsh-insert-bookmark
  bindkey '@@' --hzsh-insert-bookmark

  function bookmark()
  {
    if (( ! ${#} )); then
      # When no arguments are provided, just display existing bookmarks
      for link ($__hzsh_zsh_bookmarks_cache/*(N@)) {
        local markname="${fg[green]}${link:t}${reset_color}"
        local __hzsh_zsh_bookmarks_cache="${fg[blue]}${link:A}${reset_color}"
        printf "%-30s -> %s\n" ${markname} ${__hzsh_zsh_bookmarks_cache}
      }
    else
      # Otherwise, we may want to add a bookmark or delete an existing one.
      local -a delete
      zparseopts -D d=delete
      if (( ${+delete[1]} )); then
        # With `-d`, we delete an existing bookmark
        command rm ${__hzsh_zsh_bookmarks_cache}/${1}
      else
        # Otherwise, add a bookmark to the current directory. The first
        # argument is the bookmark name. `.` is special and means the bookmark
        # should be named after the current directory.
        local name=${1}
        [[ ${name} == "." ]] && name=${PWD:t}
        ln -s ${PWD} ${__hzsh_zsh_bookmarks_cache}/${name}
        hash -d -- -${name}=${PWD}
      fi
    fi
  }
}
