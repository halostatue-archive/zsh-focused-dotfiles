# ~/.tmux.conf
# Based on various tmux configurations I've seen.

# Don't prompt.
# bind-key x kill-pane
# bind-key & kill-window

# Cycle panes with 'C-b, b'
unbind ^B
bind ^B select-pane -t :.*

# Reload conf with C-t, r
unbind r
bind r source-file ~/.tmux.conf

# Swap panes with C-t, o
# unbind o
# bind o rotate-window -D

# Clear with 'C-a, k'
# bind k send-keys "clear"\; send-keys "Enter"

# No mouse scrolling, as it also means we can't select-then-copy text
# to the regular clipboard.
set -g mode-mouse off
# Click to select pane.
set-option -g mouse-select-pane on

## Status Bar Setup
# set-option -g status-bg green
set-option -g status-bg default
set-option -g status-fg white
set-option -g status-attr default
# Set status bar right-hand display
set-option -g status-right "[ #[fg=magenta,bright]#(uptime | awk '{print $10,$11,$12; }' | sed -e 's/,//g') #[default]][ #[fg=cyan,bright] %Y.%m.%d %H.%m #[default]]"

# if '[ -z "$DISPLAY" ]' 'set -g status-left "[#[fg=green] #H #[default]]"'
# if '[ -z "$DISPLAY" ]' 'set -g status-right-length 50'

# default window title colors
set-window-option -g window-status-fg cyan
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# center align the window list
# set -g status-justify centre

# Display status items for x milliseconds
set-option -g display-time 3000

set-option -g bell-action any
# set-option -g lock-after-time 1800

# Default global window options.
set-window-option -g remain-on-exit on
# set-window-option -g window-status-current-attr "underscore"
# set-window-option -g xterm-keys on

# Keys to switch session.
bind Q switch-client -t0
bind W switch-client -t1
bind E switch-client -t2

# Other key bindings.
bind m set-window-option monitor-activity

bind y set-window-option force-width 81
bind u set-window-option force-width 0

# Toggle statusbar
bind-key b set-option status

# Ctrl+left/right cycles thru windows
bind-key -n C-right next
bind-key -n C-left prev

# set-window-option -g window-status-current-attr bright,reverse
# set-window-option -g window-status-current-bg cyan
# set-window-option -g window-status-current-fg black

# open a man page in new window
bind / command-prompt "split-window 'exec man %%'"

# quick view of processes
bind '~' split-window "exec htop"

# scrollback buffer n lines
set-option -g history-limit 5000

# on-screen time for display-panes in ms
set -g display-panes-time 3000

# Start window index at 1.
set -g base-index 1

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux.#I.#W"

set -g default-terminal "screen-256color"

##
# new-session [-d] [-n window-name] [-s session-name] [-t target-session]
#             [shell-command]
# new-window [-adk] [-n window-name] [-t target-window] [shell-command]

##
# new-session -s mysession mutt
# new-window -t 2
# new-window -d -t 3
# new-window -d -t 5 mocp
# new-window -d -t 6 rtorrent
# select-window -t 1

# # $Id: vim-keys.conf,v 1.2 2010/09/18 09:36:15 nicm Exp $
# #
# # vim-keys.conf, v1.2 2010/09/12
# #
# # By Daniel Thau.  Public domain.
# #
# # This configuration file binds many vi- and vim-like bindings to the
# # appropriate tmux key bindings.  Note that for many key bindings there is no
# # tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# # differently from the previous versions
#
# # split windows like vim
# # vim's definition of a horizontal/vertical split is reversed from tmux's
# bind s split-window -v
# bind v split-window -h
#
# # move around panes with hjkl, as one would in vim after pressing ctrl-w
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
#
# # resize panes like vim
# # feel free to change the "1" to however many lines you want to resize by, only
# # one at a time can be slow
# bind < resize-pane -L 1
# bind > resize-pane -R 1
# bind - resize-pane -D 1
# bind + resize-pane -U 1
#
# # bind : to command-prompt like vim
# # this is the default in tmux already
# bind : command-prompt
#
# # vi-style controls for copy mode
# setw -g mode-keys vi
